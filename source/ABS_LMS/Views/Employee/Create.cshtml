@model ABS_LMS.Models.EmployeeViewModel

@{
    ViewBag.Title = "Create";
}



<div class="row employeecreate">
    <h1>Create Employee</h1>
    @using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>EmployeeViewModel</h4>*@
        <hr />

        @Html.ValidationSummary(false, "", new { @class = "alert alert-warning" })

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.EmployeeCode, htmlAttributes: new { @class = " col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmployeeDetail.EmployeeCode, new { htmlAttributes = new { @class = "" } })
                    @*@Html.ValidationMessageFor(model => model.EmployeeDetail.EmployeeCode, "", new { @class = "pull-left alert alert-warning" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.FirstName, htmlAttributes: new { @class = " col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmployeeDetail.FirstName, new { htmlAttributes = new { @class = "" } })
                    @*@Html.ValidationMessageFor(model => model.EmployeeDetail.FirstName, "", new { @class = "pull-left alert alert-warning" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.LastName, htmlAttributes: new { @class = " col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmployeeDetail.LastName, new { htmlAttributes = new { @class = "" } })
                    @*@Html.ValidationMessageFor(model => model.EmployeeDetail.LastName, "", new { @class = "pull-left alert alert-warning" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.EmailId, htmlAttributes: new { @class = " col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmployeeDetail.EmailId, new { htmlAttributes = new { @class = "" } })
                    @*@Html.ValidationMessageFor(model => model.EmployeeDetail.EmailId, "", new { @class = "pull-left alert alert-warning" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.CompanyEmailId, htmlAttributes: new { @class = " col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmployeeDetail.CompanyEmailId, new { htmlAttributes = new { @class = "" } })
                    @*@Html.ValidationMessageFor(model => model.EmployeeDetail.CompanyEmailId, "", new { @class = "pull-left alert alert-warning" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.MobileNo, htmlAttributes: new { @class = " col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmployeeDetail.MobileNo, new { htmlAttributes = new { @class = "" } })
                    @*@Html.ValidationMessageFor(model => model.EmployeeDetail.MobileNo, "", new { @class = "pull-left alert alert-warning" })*@
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.Gender, htmlAttributes: new {@class = " col-md-4"})
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.EmployeeDetail.Gender, Model.Gender, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.EmployeeDetail.Gender, "", new {@class = "pull-left alert alert-warning"})
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.Address, htmlAttributes: new { @class = " col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmployeeDetail.Address, new { htmlAttributes = new { @class = "", @cols = 80, @rows = 5 } })
                    @*@Html.ValidationMessageFor(model => model.EmployeeDetail.Address, "", new { @class = "pull-left alert alert-warning" })*@
                </div>
            </div>


        </div>


        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.EmployeeImage, htmlAttributes: new {@class = " col-md-4"})
                <div class="col-md-8">
                    <div>
                        <img class="img-circle" id="user_img" height="100" width="90" style="border: solid;" />
                    </div>
                    <div>
                        <input type="file" title="Upload image" style="float:left" id="userimage" name="userimage" onchange="show(this) " />

                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.DOB, htmlAttributes: new {@class = " col-md-4"})
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.EmployeeDetail.DOB, new {@class = ""})
                    @*@Html.ValidationMessageFor(model => model.EmployeeDetail.DOB, "", new {@class = "pull-left alert alert-warning"})*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.DOJ, htmlAttributes: new {@class = " col-md-4"})
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.EmployeeDetail.DOJ, new {@class = ""})
                    @*@Html.ValidationMessageFor(model => model.EmployeeDetail.DOJ, "", new {@class = "pull-left alert alert-warning"})*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.DepartmentId, htmlAttributes: new {@class = " col-md-4"})
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.EmployeeDetail.DepartmentId, Model.DepartmentList, new {@class = "form-control", @onchange = "GetReportingManager();"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.DesignationId, htmlAttributes: new {@class = " col-md-4"})
                <div class="col-md-8">

                    @Html.DropDownListFor(model => model.EmployeeDetail.DesignationId, Model.DesignationList, new {@class = "form-control", @onchange = "GetReportingManager();"})

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.AadharId, htmlAttributes: new {@class = " col-md-4"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmployeeDetail.AadharId, new {htmlAttributes = new {@class = ""}})
                    @Html.ValidationMessageFor(model => model.EmployeeDetail.AadharId, "", new {@class = "pull-left alert alert-warning"})
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.PANCard, htmlAttributes: new {@class = " col-md-4"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmployeeDetail.PANCard, new {htmlAttributes = new {@class = ""}})
                    @Html.ValidationMessageFor(model => model.EmployeeDetail.PANCard, "", new {@class = "pull-left alert alert-warning"})
                </div>
            </div>

            
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeDetail.ReportingManager, htmlAttributes: new {@class = " col-md-4"})
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.EmployeeDetail.ReportingManager, Model.ReportingManager, new {@class = " form-control  reportingmanager"})
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="display: inline-flex;">
                <input type="submit" value="Create" style="margin-left: 8px;" class="btn btn-default" />
            </div>
        </div>
    </div>

    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
    @section Scripts {
        <script src="~/Scripts/jquery.validate.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        <script>

            function show(input) {
                if ($('#' + input.id).val() != '') {
                    if (input.files[0].size < 1000000) {
                        var ext = $('#userimage').val().split('.').pop().toLowerCase();
                        if ($.inArray(ext, ['JPG', 'JPEG', 'jpg', 'jpeg']) == -1) {
                            $('#' + input.id).val('');
                            alert('Only jpg,jpge file!');
                        } else {
                            var filerdr = new FileReader();
                            filerdr.onload = function (e) {
                                $('#user_img').attr('src', e.target.result);
                            }
                            filerdr.readAsDataURL(input.files[0]);
                        }
                    } else {
                        $('#' + input.id).val('');
                        alert('File Size should be less then 1MB');
                    }
                }
            }

            $(document).ready(function() {
                $("#EmployeeDetail_DOJ").datepicker({
                    dateFormat: "dd/mm/yy",
                    changeMonth: true,
                    changeYear: true,
                    constrainInput: true
                }).val();
                $("#EmployeeDetail_DOB").datepicker({
                    dateFormat: "dd/mm/yy",
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-100:+0",
                    constrainInput: true
                }).val();

                $('.nav #employee').addClass('active');

            });

            function GetReportingManager() {
                var url = "/Employee/GetReportingManager/";
                var departmentId = $('#EmployeeDetail_DepartmentId').val();

                $.ajax({
                    url: url,
                    data: { departmentId: departmentId },
                    cache: false,
                    type: "POST",
                    success: function(data) {
                        var markup = "<option value='0'>Reporting Manager</option>";
                        for (var x = 0; x < data.length; x++) {
                            markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                        }
                        $(".reportingmanager").html("");
                        $(".reportingmanager").html(markup).show();
                    },
                    error: function(reponse) {
                        alert("error : " + reponse);
                    }
                });

            }
        </script>
    }
